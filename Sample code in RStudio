Writing code in RStudio is straightforward. Here are the steps to get started:

### 1. **Open RStudio**
- Launch RStudio from your applications menu or desktop shortcut.

### 2. **Create a New Script**
- Click on `File` in the menu bar.
- Select `New File` and then `R Script`. This will open a new script editor where you can write your R code.

### 3. **Write Your Code**
- In the script editor, type your R code. For example:
  ```R
  # This is a comment
  print("Hello, world!")
  
  # Simple arithmetic
  x <- 10
  y <- 20
  z <- x + y
  print(z)
  ```

### 4. **Run Your Code**
- To run the entire script, click the `Source` button at the top right of the script editor.
- To run a specific line or a selected portion of the code, highlight it and press `Ctrl+Enter` (Windows/Linux) or `Cmd+Enter` (Mac).

### 5. **Use the Console**
- You can also type and run code directly in the console at the bottom of the RStudio interface. This is useful for quick tests or interactive work.

### 6. **Save Your Script**
- Save your script by clicking `File` -> `Save` or `Save As`, and choose a location on your computer. Give your file a name with the `.R` extension.

### 7. **View Outputs and Plots**
- Any outputs or messages from your code will appear in the console.
- Plots generated by your code will appear in the `Plots` tab in the bottom right pane.

### 8. **Manage Your Workspace**
- The `Environment` tab in the top right pane shows the objects in your R session.
- You can import datasets, view data frames, and manage variables here.

### 9. **Install and Load Packages**
- To use additional libraries, install them using the `install.packages("packageName")` function in the console.
- Load the package in your script using `library(packageName)`.

### Example:
```R
# Install and load a package
install.packages("ggplot2")
library(ggplot2)

# Create a simple plot
data(mpg, package = "ggplot2")
ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
```

### 10. **Seek Help and Documentation**
- Use the `Help` tab in the bottom right pane to search for documentation on R functions and packages.
- You can also use the `?` followed by a function name in the console to get help. For example, `?print`.

By following these steps, you can write, run, and manage R code effectively in RStudio.
